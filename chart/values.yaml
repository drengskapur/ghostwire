# yaml-language-server: $schema=values.schema.json
#
# ┌─────────────────────────────────────────────────────────────────────────────────┐
# │ Ghostwire - Signal Desktop Helm Chart - Production-Ready Default Values         │
# │                                                                                 │
# │ 🔴 IMPORTANT: This chart includes default values for initial testing.           │
# │    For production deployments, you MUST:                                        │
# │                                                                                 │
# │    1. Change ALL default passwords (VNC_PW, cookie secret, htpasswd entries)    │
# │    2. Use external secret management for credentials                            │
# │    3. Enable TLS/HTTPS with proper certificates                                 │
# │    4. Review and adjust resource limits based on your workload                  │
# │    5. Configure proper storage classes for your environment                     │
# │                                                                                 │
# │ 📖 See README.md for detailed configuration instructions                        │
# └─────────────────────────────────────────────────────────────────────────────────┘

## @section Global parameters
##
## @section Image Configuration
## Signal Desktop container image configuration
##
## @param image.repository Signal Desktop image repository
## @param image.tag Signal Desktop image tag (immutable tags are recommended)
## @param image.digest Signal Desktop image digest (sha256 hash, takes precedence over tag)
## @param image.pullPolicy Image pull policy (Always, IfNotPresent, Never)
##
image:
  repository: kasmweb/signal
  tag: "1.18.0"
  ## Optionally specify image by digest (e.g., sha256:abc123...)
  ## digest: ""
  pullPolicy: IfNotPresent

## @param imagePullSecrets Docker registry secret names as an array
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
##
imagePullSecrets: []

## @section Deployment Configuration
##
## @param replicaCount Number of Signal Desktop replicas (should be 1 for single-user)
## Signal Desktop is tied to a phone number, so only 1 replica is supported
##
replicaCount: 1

## @section Service Configuration
## Kubernetes Service configuration
##
## @param service.type Kubernetes Service type (ClusterIP, NodePort, LoadBalancer)
## @param service.port Service port for VNC access
## @param service.targetPort Container target port for VNC
## @param service.loadBalancerIP LoadBalancer IP address (for type: LoadBalancer with reserved IP)
##
service:
  type: ClusterIP
  port: 6901
  targetPort: 6901
  ## For LoadBalancer type on DigitalOcean with reserved IP
  ## Example: loadBalancerIP: "209.38.63.45"
  ##
  # loadBalancerIP: "209.38.63.45"

## @section Ingress Configuration
## Ingress configuration for external access
##
## @param ingress.enabled Enable ingress controller resource
## @param ingress.className Ingress class name (e.g., nginx)
## @param ingress.annotations Ingress annotations
## @param ingress.hosts Ingress host configuration
## @param ingress.tls Ingress TLS configuration
##
ingress:
  enabled: false
  className: ""
  ## Additional annotations for the Ingress resource
  ## Example: Enable TLS with cert-manager
  ##   cert-manager.io/cluster-issuer: letsencrypt-prod
  ##   nginx.ingress.kubernetes.io/proxy-body-size: "0"
  ##
  annotations: {}
  ## Ingress host configuration
  ##
  hosts:
    - host: signal.example.com
      paths:
        - path: /
          pathType: Prefix
  ## TLS configuration for HTTPS
  ## Example:
  ##   tls:
  ##     - secretName: signal-tls
  ##       hosts:
  ##         - signal.example.com
  ##
  tls: []

## @section Persistent Storage Configuration
## Persistent storage for Signal Desktop data
##
## @param persistence.enabled Enable persistent storage for Signal data
## @param persistence.storageClass PVC Storage Class (use default if empty)
## @param persistence.accessMode PVC Access Mode (ReadWriteOnce recommended)
## @param persistence.size PVC Storage Request size
## @param persistence.mountPath Container mount path for Signal data
##
persistence:
  enabled: true
  ## Storage class for PVC
  ## If undefined (default) or set to null, uses default provisioner
  ##
  # storageClass: ""
  accessMode: ReadWriteOnce
  size: 10Gi
  ## Path where Signal stores data in the KasmVNC container
  ##
  mountPath: /home/kasm-user

## @section Resource Configuration
## Resource limits and requests for Signal Desktop container
##
## @param resources.limits.cpu CPU limit
## @param resources.limits.memory Memory limit
## @param resources.requests.cpu CPU request
## @param resources.requests.memory Memory request
##
resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 500m
    memory: 1Gi

## @section Security Configuration
## Pod and container security context
##
## @param securityContext.runAsUser User ID to run the container
## @param securityContext.runAsGroup Group ID to run the container
## @param securityContext.fsGroup Filesystem group ID for volumes
##
securityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  ## Additional security options (uncomment to enable):
  ##
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true

## @section Environment Variables
## Environment configuration for KasmVNC and Signal
##
## @param env Array of environment variables
##
env:
  ## ⚠️  SECURITY: Change VNC credentials for production!
  ##
  - name: VNC_USER
    value: "kasm_user"
  - name: VNC_PW
    value: "password"
  ## VNC screen resolution
  ##
  - name: VNC_RESOLUTION
    value: "1280x720"

## @param shmSize Shared memory size in MB (for browser performance)
##
shmSize: 256

## @param envFrom Additional environment variables from secrets/configmaps
## Example:
##   envFrom:
##     - secretRef:
##         name: signal-secrets
##     - configMapRef:
##         name: signal-config
##
envFrom: []

## @section Pod Configuration
##
## @param podAnnotations Annotations for Signal Desktop pods
##
podAnnotations: {}

## @param podLabels Extra labels for Signal Desktop pods
##
podLabels: {}

## @param nodeSelector Node labels for pod assignment
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
##
nodeSelector: {}

## @param tolerations Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## @param affinity Affinity rules for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## @section Service Account
## Service account configuration
##
## @param serviceAccount.create Create service account
## @param serviceAccount.annotations Service account annotations
## @param serviceAccount.name Service account name (generated if not set)
##
serviceAccount:
  create: false
  annotations: {}
  name: ""

## @section Health Probes
## Liveness and readiness probe configuration
##
## @param livenessProbe.enabled Enable liveness probe
## @param livenessProbe.tcpSocket TCP socket probe
## @param livenessProbe.initialDelaySeconds Initial delay seconds
## @param livenessProbe.periodSeconds Period seconds
## @param livenessProbe.timeoutSeconds Timeout seconds
## @param livenessProbe.failureThreshold Failure threshold
##
livenessProbe:
  enabled: true
  tcpSocket:
    port: 6901
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 3

## @param readinessProbe.enabled Enable readiness probe
## @param readinessProbe.tcpSocket TCP socket probe
## @param readinessProbe.initialDelaySeconds Initial delay seconds
## @param readinessProbe.periodSeconds Period seconds
## @param readinessProbe.timeoutSeconds Timeout seconds
## @param readinessProbe.failureThreshold Failure threshold
##
readinessProbe:
  enabled: true
  tcpSocket:
    port: 6901
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 5

## @section Authentication Configuration
## Authentication relies on built-in KasmVNC basic auth
##
## @param auth.enabled Enable external authentication (Keycloak)
##
auth:
  enabled: false

## @section Cloudflare Tunnel Configuration
## Cloudflared provides secure Cloudflare Tunnel access without exposing ports
##
tunnel:
  ## @param tunnel.enabled Enable Cloudflare Tunnel
  enabled: true

  ## @param tunnel.replicaCount Number of cloudflared replicas
  replicaCount: 1

  ## @param tunnel.image Cloudflared image configuration
  ## @param tunnel.image.repository Cloudflared image repository
  ## @param tunnel.image.tag Cloudflared image tag
  ## @param tunnel.image.digest Cloudflared image digest (sha256 hash, takes precedence over tag)
  ## @param tunnel.image.pullPolicy Image pull policy
  image:
    repository: cloudflare/cloudflared
    tag: "2025.10.0"
    ## Optionally specify image by digest (e.g., sha256:abc123...)
    ## digest: ""
    pullPolicy: IfNotPresent

  ## @param tunnel.secretName Kubernetes secret containing tunnel token
  secretName: cloudflared-credentials

  ## @param tunnel.secretKey Secret key containing the token
  secretKey: token

  ## @param tunnel.resources Resource limits for cloudflared
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

## @section HAProxy Configuration
## HAProxy provides efficient HTTP/WebSocket proxying with connection pooling
##
haproxy:
  ## @param haproxy.enabled Enable HAProxy for VNC/WebSocket proxying
  enabled: true

  ## @param haproxy.replicaCount Number of HAProxy replicas
  replicaCount: 1

  ## @param haproxy.image HAProxy image configuration
  ## @param haproxy.image.repository HAProxy image repository
  ## @param haproxy.image.tag HAProxy image tag
  ## @param haproxy.image.pullPolicy Image pull policy
  image:
    repository: haproxytech/haproxy-alpine
    tag: "2.9"
    pullPolicy: IfNotPresent

  ## @param haproxy.resources Resource limits for HAProxy
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 32Mi
