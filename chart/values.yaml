# ┌─────────────────────────────────────────────────────────────────────────────────┐
# │                      GHOSTWIRE - SIGNAL DESKTOP HELM CHART                      │
# ├─────────────────────────────────────────────────────────────────────────────────┤
# │                                                                                 │
# │   ⚠️  IMPORTANT: This chart includes default values for initial testing.        │
# │                                                                                 │
# │   For production deployments, you MUST:                                         │
# │                                                                                 │
# │     • Change ALL default passwords (VNC_PW, cookie secret, htpasswd entries)    │
# │     • Use external secret management for credentials                            │
# │     • Enable TLS/HTTPS with proper certificates                                 │
# │     • Review and adjust resource limits based on your workload                  │
# │     • Configure proper storage classes for your environment                     │
# │                                                                                 │
# │   📚 See README.md for detailed configuration instructions                      │
# │                                                                                 │
# └─────────────────────────────────────────────────────────────────────────────────┘

## @section Global parameters
##
## @param global.imagePullSecrets Global Docker registry secret names
## @param nameOverride Override chart name
## @param fullnameOverride Override fully qualified app name
##
global:
  ## Docker registry secret names as an array
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

## @section Image Configuration
## Signal Desktop container image configuration
##
## @param image.repository Signal Desktop image repository
## @param image.tag Signal Desktop image tag (immutable tags are recommended)
## @param image.digest Signal Desktop image digest (sha256 hash, takes precedence over tag)
## @param image.pullPolicy Image pull policy (Always, IfNotPresent, Never)
##
image:
  repository: kasmweb/signal
  tag: "1.18.0-rolling-daily"
  ## Optionally specify image by digest (e.g., sha256:abc123...)
  ## digest: ""
  pullPolicy: Always

## @param imagePullSecrets Docker registry secret names as an array
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
##
imagePullSecrets: []

## @section Deployment Configuration
##
## @param replicaCount Number of Signal Desktop replicas (should be 1 for single-user)
## Signal Desktop is tied to a phone number, so only 1 replica is supported
##
replicaCount: 1

## @section Service Configuration
## Kubernetes Service configuration
##
## @param service.type Kubernetes Service type (ClusterIP, NodePort, LoadBalancer)
## @param service.port Service port for VNC access
## @param service.targetPort Container target port for VNC
## @param service.loadBalancerIP LoadBalancer IP address (for type: LoadBalancer with reserved IP)
##
service:
  type: ClusterIP
  port: 6901
  targetPort: 6901
  ## For LoadBalancer type on DigitalOcean with reserved IP
  ## Example: loadBalancerIP: "209.38.63.45"
  ##
  # loadBalancerIP: "209.38.63.45"

## @section Persistent Storage Configuration
## Persistent storage for Signal Desktop data
##
## @param persistence.enabled Enable persistent storage for Signal data
## @param persistence.storageClass PVC Storage Class (use default if empty)
## @param persistence.accessMode PVC Access Mode (ReadWriteOnce recommended)
## @param persistence.size PVC Storage Request size
## @param persistence.mountPath Container mount path for Signal data
##
persistence:
  enabled: true
  ## Storage class for PVC
  ## If undefined (default) or set to null, uses default provisioner
  ##
  # storageClass: ""
  accessMode: ReadWriteOnce
  size: 10Gi
  ## Path where Signal stores data in the KasmVNC container
  ##
  mountPath: /home/kasm-user

## @section Resource Configuration
## Resource limits and requests for Signal Desktop container
##
## @param resources.limits.cpu CPU limit
## @param resources.limits.memory Memory limit
## @param resources.requests.cpu CPU request
## @param resources.requests.memory Memory request
##
resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 500m
    memory: 1Gi

## @section Security Configuration
## Pod and container security context
##
## @param securityContext.runAsUser User ID to run the container
## @param securityContext.runAsGroup Group ID to run the container
## @param securityContext.fsGroup Filesystem group ID for volumes
## @param securityContext.runAsNonRoot Ensure container runs as non-root
## @param securityContext.seccompProfile Seccomp profile configuration
##
securityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

## @section Container Security Context
## Container-level security settings
##
## @param containerSecurityContext.allowPrivilegeEscalation Prevent privilege escalation
## @param containerSecurityContext.capabilities.drop Dropped capabilities
## @param containerSecurityContext.readOnlyRootFilesystem Read-only root filesystem (disabled for KasmVNC)
##
containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  ## Note: readOnlyRootFilesystem is NOT enabled for KasmVNC as it requires write access
  ## to /tmp, /home/kasm-user, and other runtime directories
  readOnlyRootFilesystem: false

## @section Authentication
## VNC authentication credentials
##
## @param auth.enabled Enable VNC password authentication (set to false to disable)
## @param auth.password VNC authentication password
##
## Note: Username is always "kasm_user" (hardcoded in KasmVNC image)
##
## ⚠️  SECURITY: Enable authentication for production!
##
auth:
  enabled: false
  password: "CorrectHorseBatteryStaple"

## @section TLS/SSL Configuration
## Custom SSL certificates for KasmVNC HTTPS/WebSocket connections
##
## @param tls.mode TLS mode: "auto" (default self-signed), "custom" (use provided cert), or "disabled" (HTTP only)
## @param tls.secretName Name of existing Kubernetes secret containing TLS cert/key (for custom mode)
## @param tls.cert TLS certificate (PEM format, inline - leave empty to use existing secret)
## @param tls.key TLS private key (PEM format, inline - leave empty to use existing secret)
##
## TLS Modes:
##   auto     - KasmVNC uses built-in self-signed certificate (default, HTTPS enabled)
##   custom   - Use custom certificate from secret or inline values (HTTPS with your cert)
##   disabled - HTTP only, no TLS (useful behind reverse proxy with TLS termination)
##
## Example using existing secret:
##   tls:
##     mode: custom
##     secretName: ghostwire-tls
##
## Example with inline certificates:
##   tls:
##     mode: custom
##     cert: |
##       -----BEGIN CERTIFICATE-----
##       ...
##       -----END CERTIFICATE-----
##     key: |
##       -----BEGIN PRIVATE KEY-----
##       ...
##       -----END PRIVATE KEY-----
##
## Example disabling HTTPS entirely (HTTP only):
##   tls:
##     mode: disabled
##
tls:
  mode: disabled  # auto, custom, or disabled
  ## Use existing secret (leave empty to create from inline cert/key below)
  secretName: ""
  ## Inline certificate (only used if secretName is empty and mode is custom)
  cert: ""
  ## Inline private key (only used if secretName is empty and mode is custom)
  key: ""

## @section Display Configuration
## VNC display settings
##
## @param display.resolution VNC screen resolution
##
display:
  resolution: "1280x720"

## @section Environment Variables
## Additional environment configuration for KasmVNC and Signal
##
## @param env Array of additional environment variables
##
env: []
  # - name: CUSTOM_VAR
  #   value: "custom_value"

## @param shmSize Shared memory size in MB (for browser performance)
##
shmSize: 512

## @param envFrom Additional environment variables from secrets/configmaps
## Example:
##   envFrom:
##     - secretRef:
##         name: signal-secrets
##     - configMapRef:
##         name: signal-config
##
envFrom: []

## @section Pod Configuration
##
## @param podAnnotations Annotations for Signal Desktop pods
##
podAnnotations: {}

## @param podLabels Extra labels for Signal Desktop pods
##
podLabels: {}

## @param nodeSelector Node labels for pod assignment
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
##
nodeSelector: {}

## @param tolerations Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## @param affinity Affinity rules for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## @section Service Account
## Service account configuration
##
## @param serviceAccount.create Create service account
## @param serviceAccount.annotations Service account annotations
## @param serviceAccount.name Service account name (generated if not set)
##
serviceAccount:
  create: false
  annotations: {}
  name: ""

## @section Health Probes
## Liveness and readiness probe configuration
##
## @param livenessProbe.enabled Enable liveness probe
## @param livenessProbe.tcpSocket TCP socket probe
## @param livenessProbe.initialDelaySeconds Initial delay seconds
## @param livenessProbe.periodSeconds Period seconds
## @param livenessProbe.timeoutSeconds Timeout seconds
## @param livenessProbe.failureThreshold Failure threshold
##
livenessProbe:
  enabled: true
  tcpSocket:
    port: 6901
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 3

## @param readinessProbe.enabled Enable readiness probe
## @param readinessProbe.tcpSocket TCP socket probe
## @param readinessProbe.initialDelaySeconds Initial delay seconds
## @param readinessProbe.periodSeconds Period seconds
## @param readinessProbe.timeoutSeconds Timeout seconds
## @param readinessProbe.failureThreshold Failure threshold
##
readinessProbe:
  enabled: true
  tcpSocket:
    port: 6901
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 5


