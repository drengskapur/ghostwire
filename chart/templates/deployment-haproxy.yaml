{{- if .Values.haproxy.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ghostwire.fullname" . }}-haproxy
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ghostwire.labels" . | nindent 4 }}
    app.kubernetes.io/component: proxy
spec:
  replicas: {{ .Values.haproxy.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "ghostwire.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: proxy
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-haproxy.yaml") . | sha256sum }}
      labels:
        {{- include "ghostwire.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: proxy
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.haproxy.serviceAccount.create }}
      serviceAccountName: {{ include "ghostwire.fullname" . }}-haproxy
      {{- end }}
      securityContext:
        {{- toYaml .Values.haproxy.securityContext | nindent 8 }}
      containers:
      - name: haproxy
        image: "{{ .Values.haproxy.image.repository }}:{{ .Values.haproxy.image.tag }}"
        imagePullPolicy: {{ .Values.haproxy.image.pullPolicy | default "IfNotPresent" }}
        securityContext:
          {{- toYaml .Values.haproxy.containerSecurityContext | nindent 10 }}
        ports:
        - name: vnc
          containerPort: 6901
          protocol: TCP
        - name: health
          containerPort: 8080
          protocol: TCP
        {{- if .Values.haproxy.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: {{ .Values.haproxy.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.haproxy.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.haproxy.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.haproxy.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.haproxy.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: {{ .Values.haproxy.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.haproxy.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.haproxy.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.haproxy.readinessProbe.failureThreshold }}
        {{- end }}
        volumeMounts:
        - name: haproxy-config
          mountPath: /usr/local/etc/haproxy/haproxy.cfg
          subPath: haproxy.cfg
        {{- if .Values.haproxy.ssl.caSecret }}
        - name: ca-cert
          mountPath: /etc/haproxy/ca
          readOnly: true
        {{- end }}
        resources:
          {{- toYaml .Values.haproxy.resources | nindent 10 }}
      volumes:
      - name: haproxy-config
        configMap:
          name: {{ include "ghostwire.fullname" . }}-haproxy
      {{- if .Values.haproxy.ssl.caSecret }}
      - name: ca-cert
        secret:
          secretName: {{ .Values.haproxy.ssl.caSecret }}
          defaultMode: 0444
      {{- end }}
{{- end }}
