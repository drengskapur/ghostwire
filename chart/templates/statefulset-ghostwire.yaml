apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "ghostwire.fullname" . }}
  labels:
    {{- include "ghostwire.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "ghostwire.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ghostwire.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "ghostwire.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: app
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "ghostwire.serviceAccountName" . }}
      {{- end }}
      restartPolicy: Always
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- if eq .Values.tls.mode "custom" }}
      initContainers:
      - name: setup-tls
        image: cgr.dev/chainguard/busybox:latest
        command: ['/bin/ash', '-c']
        args:
        - |
          mkdir -p /home/kasm-user/.vnc
          cat /tmp/tls-secret/tls.key /tmp/tls-secret/tls.crt > /home/kasm-user/.vnc/self.pem
          chmod 600 /home/kasm-user/.vnc/self.pem
          chown 1000:1000 /home/kasm-user/.vnc/self.pem
          echo "Custom TLS certificate installed"
        volumeMounts:
        - name: tls-certs
          mountPath: /tmp/tls-secret
          readOnly: true
        - name: signal-data
          mountPath: /home/kasm-user
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      {{- end }}
      containers:
      - name: signal
        image: "{{ include "ghostwire.image" . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 10 }}
        ports:
        - name: vnc
          containerPort: {{ .Values.service.targetPort }}
          protocol: TCP
        env:
        - name: VNC_PW
          value: {{ .Values.auth.password | quote }}
        - name: VNC_RESOLUTION
          value: {{ .Values.display.resolution | quote }}
        {{- if or (eq .Values.tls.mode "disabled") (not .Values.auth.enabled) }}
        - name: VNCOPTIONS
          value: "-PreferBandwidth -DynamicQualityMin=4 -DynamicQualityMax=7 -DLP_ClipDelay=0{{- if not .Values.auth.enabled }} -disableBasicAuth{{- end }}{{- if eq .Values.tls.mode "disabled" }} -sslOnly 0{{- end }}"
        {{- end }}
        {{- with .Values.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.envFrom }}
        envFrom:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          tcpSocket:
            {{- toYaml .Values.livenessProbe.tcpSocket | nindent 12 }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          tcpSocket:
            {{- toYaml .Values.readinessProbe.tcpSocket | nindent 12 }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - name: dshm
          mountPath: /dev/shm
        {{- if .Values.persistence.enabled }}
        - name: signal-data
          mountPath: {{ .Values.persistence.mountPath }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: {{ .Values.shmSize }}Mi
      {{- if eq .Values.tls.mode "custom" }}
      - name: tls-certs
        secret:
          secretName: {{ .Values.tls.secretName | default (printf "%s-tls" (include "ghostwire.fullname" .)) }}
          defaultMode: 0400
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: signal-data
    spec:
      accessModes:
        - {{ .Values.persistence.accessMode }}
      {{- if .Values.persistence.storageClass }}
      storageClassName: {{ .Values.persistence.storageClass }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
  {{- end }}
