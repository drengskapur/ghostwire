{{- if .Values.haproxy.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ghostwire.fullname" . }}-haproxy
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ghostwire.labels" . | nindent 4 }}
    app.kubernetes.io/component: proxy
data:
  haproxy.cfg: |
    global
        log stdout format raw local0
        maxconn 1024

    defaults
        log global
        timeout client 3600s
        timeout connect 10s
        timeout server 3600s
        timeout tunnel 3600s
        mode http
        option httplog

    # Health check frontend
    frontend health_frontend
        bind *:8080
        monitor-uri /health
        http-request return status 200 content-type text/plain string "OK" if { path /health }

    # VNC frontend - HTTP mode for WebSocket
    frontend vnc_frontend
        bind *:6901
        default_backend ghostwire_backend

    # Backend - HTTP mode with WebSocket support
    backend ghostwire_backend
        mode http
        balance roundrobin
        # TCP check instead of HTTP (VNC doesn't have unauthenticated HTTP endpoints)
        option tcp-check
        # WebSocket support
        http-request set-header X-Forwarded-Proto https if { ssl_fc }
        http-request set-header X-Forwarded-For %[src]
        # Connect to HTTPS endpoint (KasmVNC serves HTTPS)
        {{- if and (eq .Values.haproxy.ssl.verify "required") .Values.haproxy.ssl.caSecret }}
        server {{ include "ghostwire.fullname" . }}-0 {{ include "ghostwire.fullname" . }}:6901 ssl verify required ca-file /etc/haproxy/ca/tls.crt check inter 10s rise 2 fall 3
        {{- else if eq .Values.haproxy.ssl.verify "optional" }}
        server {{ include "ghostwire.fullname" . }}-0 {{ include "ghostwire.fullname" . }}:6901 ssl verify optional check inter 10s rise 2 fall 3
        {{- else }}
        server {{ include "ghostwire.fullname" . }}-0 {{ include "ghostwire.fullname" . }}:6901 ssl verify none check inter 10s rise 2 fall 3
        {{- end }}
{{- end }}
