name: Tools Image

on:
  push:
    branches:
      - main
    paths:
      - 'images/tools/**'
      - '.github/workflows/build-tools-image.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'images/tools/**'
      - '.github/workflows/build-tools-image.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions: {}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghostwire/tools
  IMAGE_CONTEXT: images/tools

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Build image for testing
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: ${{ env.IMAGE_CONTEXT }}
          file: ${{ env.IMAGE_CONTEXT }}/Dockerfile
          load: true
          tags: ${{ env.IMAGE_NAME }}:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test image
        run: |
          docker run --rm ${{ env.IMAGE_NAME }}:test -c "
            set -e
            echo '✅ Testing installed tools...'
            kubectl version --client
            helm version --short
            jq --version
            curl --version
            nmap --version
            echo '✅ All tools working correctly'
          "

  publish-main:
    name: Publish Main Branch
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read      # For checking out code
      packages: write     # For pushing images to GHCR
      id-token: write     # For cosign keyless signing
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Install cosign
        uses: sigstore/cosign-installer@faadad0cce49287aee09b3a48701e75088a2c6ad # v4.0.0

      - name: Get commit SHA
        id: commit
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push main tag
        id: push_main
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: ${{ env.IMAGE_CONTEXT }}
          file: ${{ env.IMAGE_CONTEXT }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:0.0.0-main.${{ steps.commit.outputs.sha_short }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign main tag
        run: |
          cosign sign --yes ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}@${{ steps.push_main.outputs.digest }}

      - name: Build and push latest tag
        id: push_latest
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: ${{ env.IMAGE_CONTEXT }}
          file: ${{ env.IMAGE_CONTEXT }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:0.0.0-latest
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha

      - name: Sign latest tag
        run: |
          cosign sign --yes ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}@${{ steps.push_latest.outputs.digest }}
          echo "✅ Published ${{ env.IMAGE_NAME }}:latest"
